generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model advertiser {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description         String?               @db.VarChar(255)
  image               String?               @db.VarChar(255)
  name                String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  user_id             String                @db.Uuid
  tenant_id           String                @db.VarChar(255)
  user                user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  budget_allocation   budget_allocation[]
  business_constraint business_constraint[]
  past_performance    past_performance[]
}

model budget_allocation {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  campaign_name    String     @db.VarChar(255)
  allocated_budget Int
  advertiser_id    String     @db.Uuid
  media_planner_id String     @db.Uuid
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @default(now()) @db.Timestamp(6)
  advertiser       advertiser @relation(fields: [advertiser_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user       @relation(fields: [media_planner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model business_constraint {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  constraint_name  String     @db.VarChar(255)
  constraint_value String     @db.VarChar(255)
  advertiser_id    String     @db.Uuid
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @default(now()) @db.Timestamp(6)
  advertiser       advertiser @relation(fields: [advertiser_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model past_performance {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  campaign_name    String     @db.VarChar(255)
  performance_data String     @db.VarChar(255)
  advertiser_id    String     @db.Uuid
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @default(now()) @db.Timestamp(6)
  advertiser       advertiser @relation(fields: [advertiser_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email             String              @unique @db.VarChar(255)
  firstName         String?             @db.VarChar(255)
  lastName          String?             @db.VarChar(255)
  roq_user_id       String              @db.VarChar(255)
  tenant_id         String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  advertiser        advertiser[]
  budget_allocation budget_allocation[]
}
